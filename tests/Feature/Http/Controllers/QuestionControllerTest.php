<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\QuestionController
 */
class QuestionControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function add_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $set = \App\Models\Set::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('add-question', ['id' => $question->id]));

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function answers_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('manage-answers', ['id' => $question->id]));

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delete_answer_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $answer = \App\Models\Answer::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('delete-answer', ['id' => $question->id]));

        $response->assertOk();
        $response->assertViewIs('manage.deleteanswer');
        $response->assertViewHas('answer', $answer);
        $response->assertViewHas('question', $question);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function delete_answer_confirm_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $answer = \App\Models\Answer::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->post(route('delete-answer-confirm', ['id' => $question->id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('manage-answers', $question->id));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_answer_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $answer = \App\Models\Answer::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('edit-answer', ['id' => $question->id]));

        $response->assertOk();
        $response->assertViewIs('manage.editanswer');
        $response->assertViewHas('answer', $answer);
        $response->assertViewHas('question', $question);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function exams_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $sets = \App\Models\Set::factory()->times(3)->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('manage-exams'));

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $set = \App\Models\Set::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('manage-questions', ['id' => $question->id]));

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $set = \App\Models\Set::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->post(route('save-question', ['id' => $question->id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_answer_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->post(route('save-answers', ['id' => $question->id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_exam_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->post(route('save-exam'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_answer_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $answer = \App\Models\Answer::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->post(route('update-answer', ['id' => $question->id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('manage-answers', $answer->question->id));

        // TODO: perform additional assertions
    }

    // test cases...
}
