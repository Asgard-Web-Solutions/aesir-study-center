<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\TestController
 */
class TestControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function answer_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $test = \App\Models\Test::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $answer = \App\Models\Answer::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->post(route('answer', ['id' => $test->id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('tests'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function select_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $set = \App\Models\Set::factory()->create();
        $test = \App\Models\Test::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('select-test', ['id' => $test->id]));

        $response->assertOk();
        $response->assertViewIs('test.start');
        $response->assertViewHas('set', $set);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function sets_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $sets = \App\Models\Set::factory()->times(3)->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('tests'));

        $response->assertOk();
        $response->assertViewIs('test.select');
        $response->assertViewHas('sets', $sets);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function start_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $set = \App\Models\Set::factory()->create();
        $test = \App\Models\Test::factory()->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->post(route('start-test', ['id' => $test->id]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function test_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $test = \App\Models\Test::factory()->create();
        $question = \App\Models\Question::factory()->create();
        $questions = \App\Models\Question::factory()->times(3)->create();
        $user = \App\Models\User::factory()->create();

        $response = $this->actingAs($user)->get(route('take-test', ['id' => $test->id]));

        $response->assertRedirect(route('tests'));

        // TODO: perform additional assertions
    }

    // test cases...
}
